x<-25
hello<-"Hello there"
print(hello)
hello
help(c)
x<-c(1,2,2,5,5,10)
min(x)
max(x)
mean(x)
x<-c(1,2,2,5,5,10)
min(x)
max(x)
mean(x)
,5,10)
min(x)
max(x)
mean(x)
x<-c(1,2,2,NA,5,10)
min(x)
max(x)
mean(x)
?NA
?min()
min(x, na.rm = TRUE)
min(x, na.rm = TRUE)
max(x, na.rm = TRUE)
mean(x, na.rm = TRUE)
ls
ls()
rm(list-ls())
### Company   : Stevens
# Project     :
# Purpose     :
# First Name  : Derek
# Last Name   : Pulaski
# Id          : 10409595
x<-25
x
hello<-"Hello there"
print(hello)
hello
help()
help(c)
?c()
example(c)
help.start()
x<-c(1,2,2,NA,5,10)
min(x, na.rm = TRUE)
max(x, na.rm = TRUE)
mean(x, na.rm = TRUE)
?NA
?min()
y <- mean(x,na.rm = TRUE)
y
summary(y)
ls()
cat<-c("good", "bad", "good", "bad", "bad", "bad", "good")
typeof(cat)
cat2<-factor(cat)
cat2
typeof(cat2)
typeof(cat2)
cat3<-as.integer(cat)
cat4<-as.integer(cat2)
days<-c("Monday", "Sunday", "Tuesday", "Wednesday", "Thursday", "Saturday")
days
days_factor<-factor(days)
days<-c("Monday", "Sunday", "Tuesday", "Wednesday", "Thursday", "Saturday")
days
days_factor<-factor(days)
days_factor
days_factor<-factor(days, levels = (c("Monday",  "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday","Sunday",)))
days_factor<-factor(days, levels = (c("Monday",  "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday","Sunday")))
days_factor
x<-1:9
?matrix(x)
mx1<- matrix(x, nrow =3, ncol =3, byrow = FALSE)
is.matrix(mx1)
mx1
my.lst <- list(123123, c("derek", "pulaski"), c(1,3,4,5,6))
my.lst
my.lst <- list(stud.id = 14234, stud.name=c("First","last"))
rm(list-ls())
rm(list-ls())
rm(list<-ls())
rm(list->ls())
rm(list-ls())
### Company   : Stevens
# Project     :
# Purpose     :
# First Name  : Derek
# Last Name   : Pulaski
# Id          : 10409595
x<-25
x
hello<-"Hello there"
print(hello)
hello
help()
help(c)
?c()
example(c)
help.start()
x<-c(1,2,2,NA,5,10)
min(x, na.rm = TRUE)
max(x, na.rm = TRUE)
mean(x, na.rm = TRUE)
?NA
?min()
y <- mean(x,na.rm = TRUE)
y
summary(y)
x3<-seq(from=10.2,to=26.5, by=2.1)
mode(x3)
typeof(x3)
x5<-seq(from=1,to=6,by=1)
x6<-1:6
typeof(x6)
x7<-as.integer(x5)
typeof(x7)
x8<-c(x6,hello)
typeof(x8)
firstname<-"Derek"
lastname<-"Pulaski"
fullName<-c(firstname, lastname)
?factor()
cat<-c("good", "bad", "good", "bad", "bad", "bad", "good")
typeof(cat)
cat2<-factor(cat)
cat2
typeof(cat2)
cat3<-as.integer(cat)
cat4<-as.integer(cat2)
days<-c("Monday", "Sunday", "Tuesday", "Wednesday", "Thursday", "Saturday")
days
days_factor<-factor(days)
days_factor
days_factor<-factor(days, levels = (c("Monday",  "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday","Sunday")))
x<-1:9
?matrix(x)
mx1<- matrix(x, nrow =3, ncol =3, byrow = FALSE)
is.matrix(mx1)
mx1
my.lst <- list(123123, c("derek", "pulaski"), c(1,3,4,5,6))
my.lst <- list(stud.id = 14234, stud.name=c("First","last"))
my.dataset <- data.frame(site=c('A','B'), ph =c(7,4))
data()
data(iris)
subset3<-iris[c(T,F,F,F), c(2,3,4)]
subset3
idx<-sample(nrow(iris), as.integer(.75)*nrow(iris))
training<-iris[idx,]
idx<-sample(nrow(iris), as.integer(.75)*nrow(iris))
training<-iris[idx,]
test<-iris[-idx,]
test
training
idx<-sample(nrow(iris), as.integer(.75*nrow(iris)))
training<-iris[idx,]
test<-iris[-idx,]
training
test
test
rm(list=ls())
rm(list=ls())
source('C:/Users/kille/Downloads/Mod07_function.R', echo=TRUE)
install.packages("kknn")
installed.packages()
source('~/mod7.r', echo=TRUE)
source('~/mod7.r', echo=TRUE)
source('~/mod7.r', echo=TRUE)
source('~/mod7.r', echo=TRUE)
source('~/mod7.r', echo=TRUE)
source('~/mod7.r', echo=TRUE)
source('~/mod7.r', echo=TRUE)
source('~/mod7.r', echo=TRUE)
df <- read.csv("breast-cancer-wisconsin.data.csv", header = TRUE)
summary(df)
df <- as.data.frame(df)
df[!complete.cases(df),]
df[df=="?"]<-NA
df[!complete.cases(df),]
df$F6 <- as.integer(as.character(df$F6))
m<-mean(df$F6, na.rm = TRUE)
m
df[is.na(df)] <-  m
df[!complete.cases(df),]
counts <- ddply(df, .(df$Class, df$F6), nrow)
names(counts) <- c("Class", "F6", "Freq")
counts
x<-1
for(i in 2:7){
for(j in i:7){
if(i == j) next
n <-paste("plot",x, ".png", sep = "")
n
png(n)
plot(df[,i], df[,j], main = paste(names(df)[i], "vs", names(df)[j]),
ylab = names(df)[j],
xlab = names(df)[i])
x<-x+1
dev.off()
}
}
hist(df$F7, plot = TRUE)
hist(df$F8, plot = TRUE)
hist(df$F9, plot = TRUE)
d
d
setwd("~/CS513/cats")
rm(list = ls())
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
df_train <- read.csv("./data/train_new.csv")
df_test <- read.csv("./data/test_new.csv")
df_train <- df_train[,-1]
df_test <- df_test[,-1]
# levels(df_test$SimpleColor) <- levels(df_train$SimpleColor)
# df_train$OutcomeType <- as.integer(df_train$OutcomeType)
# df_train$AnimalType <- as.integer(df_train$AnimalType)
df_train$SimpleColor <- as.integer(df_train$SimpleColor)
# df_test$AnimalType <- as.integer(df_test$AnimalType)
df_test$SimpleColor <- as.integer(df_test$SimpleColor)
mytree1 <- rpart(OutcomeType~., data = df_train, control=rpart.control(minsplit=1, minbucket=1, cp=0.001))
prediction<-predict( mytree1 ,df_test , type="class" )
table(actual=df_test[,2],prediction)
wrong<- (df_test[,2]!=prediction)
rate<-sum(wrong)/length(wrong)
print(rate)
rpart.plot(mytree1)
prp(mytree1)
fancyRpartPlot(mytree1)
rpart.plot(mytree1)
prediction<-predict( mytree1 ,df_test , type="class" )
table(actual=df_test[,2],prediction)
wrong<- (df_test[,2]!=prediction)
rate<-sum(wrong)/length(wrong)
print(rate)
summary(mytree1)
mytree1 <- rpart(OutcomeType~., data = df_train[,c(-1)], control=rpart.control(minsplit=1, minbucket=1, cp=0.001))
prediction<-predict( mytree1 ,df_test , type="class" )
table(actual=df_test[,2],prediction)
wrong<- (df_test[,2]!=prediction)
rate<-sum(wrong)/length(wrong)
print(rate)
rpart.plot(mytree1)
df_train[,c(-1)]
rpart.plot(mytree1)
prp(mytree1)
mytree1 <- rpart(OutcomeType~., data = df_train[,c(-1)], control=rpart.control(minsplit=1, minbucket=1, cp=0.001))
mytree <- rpart(OutcomeType~ AnimalType + AgeinDays + HasName + IsNeutered + IsMix + Gender + SimpleColor, data = df_train,  control=rpart.control(minsplit=1, minbucket=1, cp=0.001))
mytree1 <- rpart(OutcomeType~ AnimalType + AgeinDays + HasName + IsNeutered + IsMix + Gender + SimpleColor, data = df_train,  control=rpart.control(minsplit=1, minbucket=1, cp=0.001))
mytree1 <- rpart(OutcomeType~ AnimalType + AgeinDays + HasName + IsNeutered + IsMix + Gender + SimpleColor, data = df_train,  control=rpart.control(minsplit=1, minbucket=1, cp=0.001))
rpart.plot(mytree1)
summary(mytree1)
prediction<-predict( mytree1 ,df_test , type="class" )
table(actual=df_test[,2],prediction)
wrong<- (df_test[,2]!=prediction)
rate<-sum(wrong)/length(wrong)
print(rate)
summary(mytree1)
mytree1 <- rpart(OutcomeType~ AnimalType + AgeinDays + HasName + IsNeutered + IsMix + Gender + SimpleColor, data = df_train,  control=rpart.control(minsplit=1, minbucket=1, cp=0.01))
rpart.plot(mytree1)
mytree1 <- rpart(OutcomeType~ AnimalType + AgeinDays + HasName + IsNeutered + IsMix + Gender + SimpleColor, data = df_train,  control=rpart.control(minsplit=1, minbucket=1, cp=0.005))
rpart.plot(mytree1)
prediction<-predict( mytree1 ,df_test , type="class" )
table(actual=df_test[,2],prediction)
wrong<- (df_test[,2]!=prediction)
rate<-sum(wrong)/length(wrong)
print(rate)
prediction<-predict( mytree3 ,df_test , type="class" )
table(actual=df_test[,2],prediction)
wrong<- (df_test[,2]!=prediction)
rate<-sum(wrong)/length(wrong)
print(rate)
prediction<-predict( mytree2 ,df_test , type="class" )
table(actual=df_test[,2],prediction)
wrong<- (df_test[,2]!=prediction)
rate<-sum(wrong)/length(wrong)
print(rate)
prediction<-predict( mytree1 ,df_test , type="class" )
table(actual=df_test[,2],prediction)
wrong<- (df_test[,2]!=prediction)
rate<-sum(wrong)/length(wrong)
print(rate)
mytree3 <- rpart(OutcomeType~ AnimalType + AgeinDays + HasName + IsNeutered + IsMix + Gender + SimpleColor, data = df_train,  control=rpart.control(minsplit=1, minbucket=1, cp=0.01))
mytree2 <- rpart(OutcomeType~ AnimalType + AgeinDays + HasName + IsNeutered + IsMix + Gender + SimpleColor, data = df_train,  control=rpart.control(minsplit=1, minbucket=1, cp=0.005))
mytree1 <- rpart(OutcomeType~ AnimalType + AgeinDays + HasName + IsNeutered + IsMix + Gender + SimpleColor, data = df_train,  control=rpart.control(minsplit=1, minbucket=1, cp=0.001))
summary(mytree1)
prediction<-predict( mytree3 ,df_test , type="class" )
table(actual=df_test[,2],prediction)
wrong<- (df_test[,2]!=prediction)
rate<-sum(wrong)/length(wrong)
print(rate)
prediction<-predict( mytree2 ,df_test , type="class" )
table(actual=df_test[,2],prediction)
wrong<- (df_test[,2]!=prediction)
rate<-sum(wrong)/length(wrong)
print(rate)
prediction<-predict( mytree1 ,df_test , type="class" )
table(actual=df_test[,2],prediction)
wrong<- (df_test[,2]!=prediction)
rate<-sum(wrong)/length(wrong)
print(rate)
rpart.plot(mytree1)
rpart.plot(mytree3)
